//
//  HeadPhoneModel.swift
//  Autogenerated by typewriter
//
//  Generation Date On 2018/01/08
//  Version: 1.0.0

import Foundation

public class HeadPhoneModel: TypewriterBaseModel, Error, Codable {
    enum CodingKeys: String, CodingKey {
        case color
        case battery
        case price
        case brand
    }
    public var objectId: String?
    public var color: String?
    public var battery: UInt32
    public var price: UInt64?
    public var brand: HeadPhoneBrand
    class func modelWithJson(json: Data, objectId: String?) throws -> HeadPhoneModel {
        let model = try JSONDecoder().decode(HeadPhoneModel.self, from: json)
        if let objectId = objectId {
            model.objectId = objectId
        }
        HeadPhoneModel.unidirectionalDataflow(model: model, objectId: model.objectId)
        return model
    }
    public init(objectId: String, color: String, battery: UInt32, price: UInt64, brand: HeadPhoneBrand) {
        self.objectId = objectId
        self.color = color
        self.battery = battery
        self.price = price
        self.brand = brand
    }
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.color = try container.decode(String?.self, forKey: .color)
        self.battery = try UInt32(container.decode(String.self, forKey: .battery)) ?? 0
        if let price = try container.decode(String?.self, forKey: .price) {
            self.price = UInt64(price)
        }
        self.brand = try container.decode(HeadPhoneBrand.self, forKey: .brand)
    }
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(color, forKey: .color)
        try container.encode(UInt32(battery), forKey: .battery)
        if let price = price {
            try container.encode(UInt64(price), forKey: .price)
        }
        try container.encode(brand, forKey: .brand)
    }
}

public extension HeadPhoneModel {
    public class func unidirectionalDataflow(model: HeadPhoneModel, objectId: String?) {
        // unidirectional data flow
    }
}
